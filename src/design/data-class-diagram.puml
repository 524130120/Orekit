' Copyright 2002-2012 CS Systèmes d'Information
' Licensed to CS Systèmes d'Information (CS) under one or more
' contributor license agreements.  See the NOTICE file distributed with
' this work for additional information regarding copyright ownership.
' CS licenses this file to You under the Apache License, Version 2.0
' (the "License"); you may not use this file except in compliance with
' the License.  You may obtain a copy of the License at
'
'   http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software
' distributed under the License is distributed on an "AS IS" BASIS,
' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
' See the License for the specific language governing permissions and
' limitations under the License.
 
@startuml

  skinparam svek                  true
  skinparam ClassBackgroundColor  #F3EFEB
  skinparam ClassArrowColor       #691616
  skinparam ClassBorderColor      #691616
  skinparam NoteBackgroundColor   #F3EFEB
  skinparam NoteBorderColor       #691616
  skinparam NoteFontColor         #691616
  skinparam ClassFontSize         11

  package org.orekit #ECEBD8

    package data #DDEBD8

      class DataProvidersManager {
        +String OREKIT_DATA_PATH
        +DataProvidersManager getInstance()
        +void addDefaultProviders()
        +void addProvider(DataProvider provider)
        +DataProvider removeProvider(Class<? extends DataProvider> providerClass)
        +DataProvider removeProvider(DataProvider provider)
        +void clearProviders()
        +boolean isSupported(Class<? extends DataProvider> providerClass)
        +boolean isSupported(DataProvider provider)
        +List<DataProvider> getProviders()
        +Set<String> getLoadedDataNames()
        +void clearLoadedDataNames()
        +boolean feed(String supportedNames, DataLoader loader)
      }

      interface DataProvider {
        +Pattern GZIP_FILE_PATTERN
        +Pattern ZIP_ARCHIVE_PATTERN
        +boolean feed(Pattern supported, DataLoader visitor)
      }

      interface DataLoader {
        +boolean stillAcceptsData()
        +void loadData(InputStream input, String name)
      }

      DataProvidersManager "1" o--> "*" DataProvider : manages, feeds
      DataProvider <|-- DirectoryCrawler
      DataProvider <|-- ClassPathCrawler
      DataProvider <|-- NetworkCrawler
      DataProvider <|-- ZipJarCrawler
      DataProvider -down-> DataLoader : feeds

    end package

    package time #DDEBD8
      DataLoader <|-- UTCTAIHistoryFilesLoader
    end package

    package frames #DDEBD8
      interface EOP2000HistoryLoader
      DataLoader <|.. EOP2000HistoryLoader
    end package

    package various.other.packages #DDEBD8
      DataLoader <|-- SomeSpecificDataLoader
    end package

  end package

  package user.application #ECEBD8
    DataProvider <|-- MyDatabaseLoader
  end package

@enduml
