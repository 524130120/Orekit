<?xml version="1.0"?>

<!--                This is an ant build script                   -->
<!-- You should process this file with ant to compile the project -->

<project name="orekit" basedir="." default="build">

  <!-- Properties setting -->
  <target name="init">

    <tstamp/>

    <property name="version"         value="1.3" />

    <!-- main customization properties -->
    <property name="root.package.name" value="fr.cs.aerospace.orekit" />
    <property name="copyright"         value="2002-2006 C-S" />

    <!-- directories -->
    <property name="src.dir"        value="src" />
    <property name="tests-src.dir"  value="tests-src" />
    <property name="lib.dir"        value="lib" />
    <property name="bin.dir"        value="bin" />
    <property name="build.dir"      value="build" />
    <property name="resources.dir"  value="fr/cs/aerospace/orekit/resources" />
    <property name="doc.dir"        value="doc" />
    <property name="javadoc.dir"    value="${doc.dir}/javadoc" />

    <!-- external libraries properties -->
    <property name="mantissa.jar" value="${lib.dir}/mantissa-6.3.jar" />

    <!-- compilation properties -->
    <property name="debug"       value="true" />
    <property name="deprecation" value="true" />

    <!-- junit related properties -->
    <property name="test.class"  value="${root.package.name}.AllTests" />

    <!-- Classpath setting -->
    <path id="project.class.path">
      <pathelement location="${mantissa.jar}" />
      <pathelement path="${java.class.path}"  />
     </path>

  </target>

  <!-- Directories preparation -->
  <target name="prepare" depends="init" description="Create directories">
    <mkdir dir="${build.dir}"   />
    <mkdir dir="${bin.dir}"     />
    <mkdir dir="${javadoc.dir}" />
  </target>


  <!-- Compilation -->
  <target name="compile" depends="prepare" description="Compile the library">
    <javac srcdir="${src.dir}" destdir="${bin.dir}"
           debug="${debug}" deprecation="${deprecation}">
      <classpath refid="project.class.path" />
      <exclude name="**/gui/*" />
    </javac>
    <copy todir="${bin.dir}/${resources.dir}">
      <fileset dir="${src.dir}/${resources.dir}"/>
    </copy>
  </target>

  <!-- Tests -->
  <target name="compile-tests" depends="compile"
          description="Compile the tests">
    <javac srcdir="${tests-src.dir}" destdir="${bin.dir}"
           debug="${debug}" deprecation="${deprecation}">
      <classpath refid="project.class.path" />
   </javac>
  </target>

  <target name="test" depends="init,compile-tests"
          description="Run the tests">
    <junit fork="yes">
      <classpath>
        <path refid="project.class.path" />
        <pathelement location="${bin.dir}" />
      </classpath>
      <formatter type="brief" usefile="false" />
      <test name="${test.class}" />
    </junit>
  </target>

  <!-- Documentation -->
  <target name="javadoc" depends="init"
          description="Build javadoc documentation">

    <!-- discard the CVS files -->
    <pathconvert pathsep="," property="documentedfiles">
      <path>
        <fileset dir="${src.dir}">
          <include name="**/*.java" />
          <exclude name="**/CVS/*"  />
        </fileset>
     </path>
    </pathconvert>

    <!-- build the documentation -->
    <javadoc sourcepath="${src.dir}" sourcefiles="${documentedfiles}"
             destdir="${javadoc.dir}"
             bottom="&lt;i&gt;Copyright &#169; ${copyright}. All Rights Reserved.&lt;/i&gt;">
      <classpath refid="project.class.path" />
    </javadoc>

  </target>

  <!-- Documentation -->
  <target name="doc" depends="javadoc" description="Build documentation"/>

  <!-- All: compilation and documentation -->
  <target name="all" depends="init,compile,doc" description="Build everything"/>

  <target name="build" depends="init,compile" description="Build the archive file">
    <jar jarfile="${build.dir}/${ant.project.name}-${version}.jar"
         excludes="**/*Test.class,**/*Tests.class,**/Test*.class"
         compress="true" basedir="${bin.dir}" manifest="manifest" />
    <copy todir="${build.dir}">
      <fileset dir="${lib.dir}"/>
    </copy>
  </target>

  <!-- Dist : packaging of all -->
  <target name="dist" depends="init,build,doc"
          description="Create distribution files">
   <zip zipfile="${ant.project.name}-${version}-src.zip">
      <zipfileset dir="${basedir}" prefix="${ant.project.name}-${version}-src" >
        <exclude name="${ant.project.name}-*-src.zip" />
        <exclude name="${ant.project.name}-*-doc.zip" />
        <exclude name="${ant.project.name}-*-bin.zip" />
        <exclude name="**/CVS/*"  />
        <exclude name="${build.dir}/**" />
        <exclude name="${bin.dir}/**" />
        <exclude name="${doc.dir}/**" />
      </zipfileset>
    </zip>
    <zip zipfile="${ant.project.name}-${version}-bin.zip">
      <zipfileset dir="${build.dir}" prefix="${ant.project.name}-${version}" >
        <exclude name="**/CVS/*" />
      </zipfileset>
    </zip>
    <zip zipfile="${ant.project.name}-${version}-doc.zip">
      <zipfileset dir="${doc.dir}" prefix="${ant.project.name}-${version}-doc" >
        <exclude name="**/CVS/*" />
      </zipfileset>
    </zip>
  </target>

  <!-- Clean targets -->
  <target name="check-dirs" depends="init">
    <available file="${build.dir}" property="build.dir.present" />
    <available file="${bin.dir}"   property="bin.dir.present"   />
    <available file="${doc.dir}"   property="doc.dir.present"   />
  </target>

  <target name="clean-builddir" depends="init,check-dirs" if="build.dir.present">
    <delete dir="${build.dir}" />
  </target>

  <target name="clean-bindir" depends="init,check-dirs" if="bin.dir.present">
    <delete dir="${bin.dir}" />
  </target>

  <target name="clean-docdir" depends="init,check-dirs" if="doc.dir.present">
    <delete dir="${doc.dir}" />
  </target>

  <target name="clean"
          depends="init,clean-builddir,clean-bindir,clean-docdir"
          description="Clean everything">
    <delete>
      <fileset dir=".">
        <include name="${ant.project.name}-*-src.zip" />
        <include name="${ant.project.name}-*-doc.zip" />
        <include name="${ant.project.name}-*-bin.zip" />
      </fileset>
    </delete>
  </target>

</project>
