<?xml version="1.0"?>

<!--                This is an ant build script                   -->
<!-- You should process this file with ant to compile the project -->

<project name="orekit" basedir="." default="build">

  <!-- Properties setting -->
  <target name="init">

    <tstamp/>

    <property name="version"         value="${DSTAMP}" />

    <!-- main customization properties -->
    <property name="rootpackagename" value="fr.cs.aerospace.orekit" />
    <property name="copyright"       value="2002-2005 C-S SI" />

    <!-- directories -->
    <property name="srcdir"        value="src" />
    <property name="docsrcdir"     value="docsrc" />
    <property name="libdir"        value="lib" />
    <property name="bindir"        value="bin" />
    <property name="builddir"      value="build" />
    <property name="bintestsdir"   value="bin-tests" />
    <property name="docdir"        value="doc" />
    <property name="javadocdir"    value="${docdir}/javadoc" />
    <property name="htmldir"       value="${docdir}/html" />

    <!-- docbook properties -->
    <property name="docbook.stylesheets.catalog" value="/etc/xml/catalog" />

    <!-- external libraries properties -->
    <property name="mantissa.jar" value="${libdir}/mantissa.jar"    />

    <!-- compilation properties -->
    <property name="debug"       value="true" />
    <property name="deprecation" value="true" />

    <!-- junit related properties -->
    <property name="test.class"  value="${rootpackagename}.AllTests" />

    <!-- Classpath setting -->
    <path id="project.class.path">
      <pathelement location="${mantissa.jar}" />
      <pathelement path="${java.class.path}"  />
      <pathelement path="${netbeans.filesystems.path}" />
    </path>

  </target>

  <!-- Directories preparation -->
  <target name="prepare" depends="init" description="Create directories">
    <mkdir dir="${builddir}"    />
    <mkdir dir="${bindir}"      />
    <mkdir dir="${bintestsdir}" />
    <mkdir dir="${javadocdir}"  />
    <mkdir dir="${htmldir}"     />
  </target>


  <!-- Compilation -->
  <target name="compile" depends="prepare" description="Compile the library">
    <javac srcdir="${srcdir}" destdir="${bindir}"
           debug="${debug}" deprecation="${deprecation}">
      <classpath refid="project.class.path" />
      <exclude name="**/CVS/*"       />
      <exclude name="**/*Test.java"  />
      <exclude name="**/*Tests.java" />
      <exclude name="**/Test*.java"  />
      <exclude name="**/Tests*.java" />
    </javac>
  </target>

  <!-- Tests -->
  <target name="compile-tests" depends="compile"
          description="Compile the tests">
    <javac srcdir="${srcdir}" destdir="${bintestsdir}"
           debug="${debug}" deprecation="${deprecation}">
      <classpath refid="project.class.path" />
      <exclude name="**/CVS/*"       />
      <include name="**/*Test.java"  />
      <include name="**/*Tests.java" />
      <include name="**/Test*.java"  />
      <include name="**/Tests*.java" />
    </javac>
  </target>

  <target name="test" depends="init,compile-tests" description="Run the tests">
    <junit fork="yes">
      <classpath>
        <path        refid="project.class.path" />
        <pathelement location="${bindir}"       />
        <pathelement location="${bintestsdir}"  />
      </classpath>
      <formatter type="brief" usefile="false" />
      <test name="${test.class}" />
    </junit>
  </target>

  <!-- Documentation -->
  <target name="javadoc" depends="init"
          description="Build javadoc documentation">

    <!-- disregard the test files -->
    <pathconvert pathsep="," property="documentedfiles">
      <path>
        <fileset dir="${srcdir}">
          <include name="**/*.java"      />
          <exclude name="**/CVS/*"       />
          <exclude name="**/Test*.java"  />
          <exclude name="**/Tests*.java" />
          <exclude name="**/*Test.java"  />
          <exclude name="**/*Tests.java" />
        </fileset>
     </path>
    </pathconvert>

    <!-- build the documentation -->
    <javadoc sourcepath="${srcdir}" sourcefiles="${documentedfiles}"
             destdir="${javadocdir}"
             bottom="&lt;i&gt;Copyright &#169; ${copyright}. All Rights Reserved.&lt;/i&gt;">
      <classpath refid="project.class.path" />
    </javadoc>

  </target>

  <!-- HTML documentation -->
  <target name="html" depends="init,prepare"
          description="Build HTML documentation">
    <xslt basedir="${docsrcdir}" destdir="${htmldir}"
          style="${docsrcdir}/custom-html.xsl"
          in="${docsrcdir}/orekit.xml" out="${htmldir}/index.html">
      <xmlcatalog>
        <catalogpath>
          <pathelement location="${docbook.stylesheets.catalog}"/>
        </catalogpath>
      </xmlcatalog>
    </xslt>
  </target>

  <!-- Documentation -->
  <target name="doc" depends="javadoc,html" description="Build documentation"/>

  <!-- All: compilation and documentation -->
  <target name="all" depends="init,compile,doc" description="Build everything"/>

  <target name="build" depends="init,compile" description="Build the archive file">
    <jar jarfile="${builddir}/${ant.project.name}-${version}.jar"
         compress="true" basedir="${bindir}" manifest="manifest" />
    <copy todir="${builddir}">
      <fileset dir="${libdir}"/>
    </copy>
  </target>

  <target name="check-zargo" depends="init">
    <available file="${ant.project.name}.zargo" property="zargo.present" />
  </target>

  <target name="copy-zargo" depends="check-zargo" if="zargo.present">
    <copy file="${ant.project.name}.zargo" tofile="${ant.project.name}-${version}.zargo"/>
  </target>

  <!-- Dist : packaging of all -->
  <target name="dist" depends="init,copy-zargo,build,doc"
          description="Create distribution files">
   <zip zipfile="${ant.project.name}-${version}-src.zip">
      <zipfileset dir="${basedir}" prefix="${ant.project.name}-${version}-src" >
        <exclude name="${ant.project.name}-${version}-src.zip" />
        <exclude name="${ant.project.name}-${version}-doc.zip" />
        <exclude name="${ant.project.name}-${version}-bin.zip" />
        <exclude name="${ant.project.name}-${version}.zargo"   />
        <exclude name="${ant.project.name}.zargo" />
        <exclude name="**/CVS/*"  />
        <exclude name="*.jar"  />
        <exclude name="${builddir}/**" />
        <exclude name="${bindir}/**" />
        <exclude name="${bintestsdir}/**" />
        <exclude name="${docdir}/**" />
      </zipfileset>
    </zip>
    <zip zipfile="${ant.project.name}-${version}-bin.zip">
      <zipfileset dir="${builddir}" prefix="${ant.project.name}-${version}" >
        <exclude name="**/CVS/*" />
      </zipfileset>
    </zip>
    <zip zipfile="${ant.project.name}-${version}-doc.zip">
      <zipfileset dir="${docdir}" prefix="${ant.project.name}-${version}-doc" >
        <exclude name="**/CVS/*" />
      </zipfileset>
    </zip>
  </target>

  <!-- Clean targets -->
  <target name="check-dirs" depends="init">
    <available file="${builddir}"    property="builddir.present"    />
    <available file="${bindir}"      property="bindir.present"      />
    <available file="${bintestsdir}" property="bintestsdir.present" />
    <available file="${docdir}"      property="docdir.present"      />
  </target>

  <target name="clean-builddir" depends="init,check-dirs" if="builddir.present">
    <delete dir="${builddir}" />
  </target>

  <target name="clean-bindir" depends="init,check-dirs" if="bindir.present">
    <delete dir="${bindir}" />
  </target>

  <target name="clean-bintestsdir" depends="init,check-dirs" if="bintestsdir.present">
    <delete dir="${bintestsdir}" />
  </target>

  <target name="clean-docdir" depends="init,check-dirs" if="docdir.present">
    <delete dir="${docdir}" />
  </target>

  <target name="clean"
          depends="init,clean-builddir,clean-bindir,clean-bintestsdir,clean-docdir"
          description="Clean everything">
    <delete>
      <fileset dir=".">
        <include name="${ant.project.name}-*.zargo"   />
        <include name="${ant.project.name}-*-src.zip" />
        <include name="${ant.project.name}-*-doc.zip" />
        <include name="${ant.project.name}-*-bin.zip" />
      </fileset>
    </delete>
  </target>

</project>
